/*
 * BOOTSTRAP APLIKACJI ESB
 *
 * Problem do rozwiÄ…zania:
 * Aplikacja Nest.js musi byÄ‡ uruchomiona z odpowiedniÄ… konfiguracjÄ….
 * CORS, port, middleware - wszystko musi byÄ‡ skonfigurowane.
 *
 * Jak to rozwiÄ…zujemy:
 * Bootstrap function inicjalizuje aplikacjÄ™:
 * - Tworzy instancjÄ™ Nest.js
 * - Konfiguruje CORS dla integracji
 * - Ustawia port z environment variables
 * - Uruchamia serwer HTTP
 *
 * Dlaczego taka konfiguracja:
 * - CORS umoÅ¼liwia dostÄ™p z frontendu/innych domen
 * - Dynamiczny port dla rÃ³Å¼nych Å›rodowisk (dev/prod)
 * - Proste logowanie startu aplikacji
 *
 * W peÅ‚nej implementacji:
 * - Swagger documentation setup
 * - Global validation pipes
 * - Security middleware (helmet, rate limiting)
 * - Graceful shutdown handlers
 * - Health check endpoints registration
 */

import { NestFactory } from "@nestjs/core";
import { AppModule } from "./app.module";

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Podstawowa konfiguracja CORS
  app.enableCors();

  const port = process.env.PORT || 3000;
  await app.listen(port);

  console.log(`ðŸš€ ESB Integration API running on port ${port}`);
}

bootstrap();
